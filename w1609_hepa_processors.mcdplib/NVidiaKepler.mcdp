mcdp {
  requires power [W]
  requires budget [USD]
  requires mass [g]

  provides resolution [pixels/deg]
  provides min_throughput [Hz]
  provides inverse_of_max_latency [1/s] 

  # fit of latency as a function of resolution
  l0 = 0.003199 s
  l1 = 0.002883 s * deg / pixels
  l2 = 0.000001 s * deg^2 / pixels^2
  r = provided resolution
  latency = l0 + l1 * r + l2 * r^2

  # fit of usage as a function of resolution
  u0 = 13.68410 dimensionless
  u1 = 1.368149 deg / pixels
  u2 = 0.000001 deg^2 / pixels^2
  usage = u0 + u1 * r + u2 * r^2

  # usage cannot go over 100%
  usage <= 100 dimensionless

  # Constraint for throughput:
  #   latency <= 1 / min_throughput
  # rewritten as:
  provided min_throughput * latency <= 1 dimensionless

  # Constraint for latency:
  #  latency <= max_latency
  # rewritten as:
  latency * provided inverse_of_max_latency <= 1 dimensionless

  # compute power consumption using linear interpolation
  power_idle = 5 W
  power_peak = 15 W
  P  = power_idle + (power_peak-power_idle) * usage / 100 dimensionless
  required power >= P

  required budget >= 100 USD
  required mass >= 25g
}
